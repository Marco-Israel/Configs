/'******************************************************************************
* @file             picPeripherie.uml
* @author           Marco Israel
* @version          v. 1.0
* @date             06-2019
* @ingroup          uml
* @brief            PIC MCU Sw interfaces to PIC HW peripherie
* @copyright        Copyright (c) 2018 Marco Israel. All rights reserved.
*
*
*
*
*              		IMPORTANT NOTICE - COPYRIGHT INFORMATION
*

*
*
* THIS SOFTWARE IS PROVIDED BY MARCO ISRAEL "AS IS". ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
* EVENT SHALL <copyright holder> BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES(INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING
* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistribution of source code must retain the this copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistribution in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the <organization> nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
*
*
* Alle Inhalte in source und binaer Form, insbesondere dises Template mit seinen
* object orientierten Konzepte der Programmiersprache C, der Coding-Conversation
* und Namensgebung beispielweise fuer Variablen, Funktionen, Parameter,
* Datentypen, usw., sind urheberrechtlich geschuetzt, Alle Rechte, einschließlich
* der Verwendung, Veroeffentlichung, Bearbeitung, Uebersetzung oder
* Verfielfaeltigung, bleiben Marco Israel vorbehalten. Dieses gilt auch fuer
* alle Instanzen, Kopien oder sonstigen Verwendungen in source oder binearform.
* In jedem Fall sind diese Copyright informationen zu uebernehmen und duerfen
* nicht ohne zustimmung vereandert werden.
*
* Die Lemfoerder Electronics GmbH, Bussche-Münch-Straße 12, 32339 Espelkamp,
* ist berechtigt dieses Template innnerhalb und ausschliesslich fuer das
* Project 'ED0096_Swipetronic' zu nutzen. Marco Israel 2019 - 2020.
*
*
*
*
********************************************************************************
* @detail
* ____TODO______
*
*
********************************************************************************
* @attention
* ____TODO______
*
*
******************************************************************************'/



@startuml


/'******************************************************************************
**      Included information
 *****************************************************************************'/
!include ..\..\..\..\TOOLS\thirdparty\mi_ooc\DOC\uml\baseObjects.uml

!include ..\TODO.txt
 hide N0
 hide N1






/'******************************************************************************
**      Inheritance logic
 *****************************************************************************'/

 PORT_PIN <|--  PIC_PORT_PIN  : < <<Inherits>>
 ADC <|--   PIC_ADC  : < <<Inherits>>
 DMA <|--   PIC_DMA  : < <<Inherits>>
 UART <|--  PIC_UART  : < <<Inherits>>
 SPI <|--   PIC_SPI  : < <<Inherits>>

 hide ADC
 hide DMA
 hide PIC_ADC
 hide PIC_DMA


/'******************************************************************************
*      Interfaces
 *****************************************************************************'/



/'******************************************************************************
*      Hidden elemets
 *****************************************************************************'/


/'******************************************************************************
*      PIC Hardware to Software  Interface objects
 *****************************************************************************'/

 AbstractClass\nmi_ooc_SUB <|..  PIC_UART   : < <<Implements >>
 AbstractClass\nmi_ooc_SUB <|..  PIC_SPI   : < <<Implements >>
 AbstractClass\nmi_ooc_SUB <|..  PIC_PORT_PIN   : < <<Implements >>










/'----- PART: PIC UART -------------------------------------------------------'/
folder PIC_UART {

    hide UART_WRAPPER
    hide UARTx_HW

    PIC_UART --*"1" PIC_UART_WRAPPER    : > <<Calls>>
    class PIC_UART {
        ____
        <b>TODO:</b>
    }


    PIC_PORT_PIN "1..2" *--  PIC_UART : < <<Needs>>
     Interface\nUART_Wrapper <|.. PIC_UART_WRAPPER :< <<Implements>>
     class PIC_UART_WRAPPER <<(W,#d70087) HW Wrapper>> {
        ____
        <b>TODO:</b>
        o   Implement RX wrapper
     }


     PIC_UART_WRAPPER -right>PIC_UARTx_HW  : > <<Calls HW Nr. X >>
     class PIC_UARTx_HW << (H,#FF7700) HARDWARE >> {
         ____
        <b>INFOS:</b>

    }

}

/'-------- END PART: PIC UART ------------------------------------------------'/




/'----- PART: PIC SPI --------------------------------------------------------'/
folder PIC_SPI {
    hide SPI_WRAPPER
    hide SPIx_HW

    PIC_SPI --*"1" PIC_SPI_WRAPPER    : > <<Calls>>
    class PIC_SPI {
        ____
        <b>TODO:</b>
    }


    PIC_PORT_PIN "1..2" *--  PIC_SPI : < <<Needs>>
    Interface\nSPI_Wrapper <|.. PIC_SPI_WRAPPER :< <<Implements>>
    class PIC_SPI_WRAPPER <<(W,#d70087) HW Wrapper>> {
        ____
        <b>TODO:</b>
        o   Implement RX wrapper
    }


     PIC_SPI_WRAPPER -right>PIC_SPIx_HW  : > <<Calls HW Nr. X >>
     class PIC_SPIx_HW << (H,#FF7700) HARDWARE >> {
         ____
        <b>INFOS:</b>

    }
}

/'-------- END PART: PIC UART ------------------------------------------------'/





/'----- PART: PIC PORT PIN ---------------------------------------------------'/

folder PIC_PORT_PIN {


    hide PORTPIN_WRAPPER
    hide PORTPINx_HW

    PIC_PORT_PIN --*"1" PIC_PORTPIN_WRAPPER    : > <<Calls>>
    class PIC_PORT_PIN {
        ____
        <b>TODO:</b>
    }


     Interface\nPORTPIN_Wrapper <|.. PIC_PORTPIN_WRAPPER :< <<Implements>>
     class PIC_PORTPIN_WRAPPER <<(W,#d70087) HW Wrapper>> {
        ____
        <b>TODO:</b>
        o   Implement RX wrapper
     }


     PIC_PORTPIN_WRAPPER -right>PIC_PORTPINx_HW  : > <<Calls HW Nr. X >>
     class PIC_PORTPINx_HW << (H,#FF7700) HARDWARE >> {
         ____
        <b>INFOS:</b>

    }

}



/'-------- END PART: PIC UART ------------------------------------------------'/



/'******************************************************************************
*      Ahhhhhse objects
 *****************************************************************************'/




/'******************************************************************************
*      DMA base objects
 *****************************************************************************'/




/'******************************************************************************
*      UART base objects
 *****************************************************************************'/







/'******************************************************************************
**
 *****************************************************************************'/

/'
 note "MI_OOC \nTemplate class diagram\n"  as N1


 note "This are the template classes" as N2
 mi_ooc_base .. N2
 N2 .. mi_ooc_sub




 package "mi_ooc" <<Folder>> {

 note  left of mi_ooc_base :Base Class


 note  left of mi_ooc_sub : Derived Class

}
'/

@enduml
