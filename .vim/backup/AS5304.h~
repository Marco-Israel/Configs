/*
 * AS5304.h
 *
 *  Created on: 25.07.2019
 *      Author: Z602900
 */

#ifndef CDRV_AS5304_AS5304_H_
#define CDRV_AS5304_AS5304_H_



#include "lemdd_header.h"



typedef void* gpt12_device_driver;





/** @brief AS5304 structure*/
typedef struct {
	gpt12_device_driver device_driver;
}AS5304_s ;





typedef enum
{
	AS5304_Direction_UNKNOWN,   /*< Direction unknown or not initialized*/
	AS5304_Direction_FORWARD,   /*< Measured direction is forward movement*/
	AS5304_Direction_BACKWARD   /*< Measured direction is backward movement*/
}AS5304_Direction;




void AS5304_init(AS5304_s *as5304,gpt12_device_driver device);





/*Driver dependend Functions*/

/**
 * @brief Returns the current position according to configured driver
 * @param as5304	pointer to valid AS304_s struct
 * @return	position in range of 0 to resolution specified
 * (f.e.: 20 Pole pairs, 40 pulses per pair,
 * quadrature measurement => 20 * 40 * 4 = 3200)
 */
int32_t 			AS5304_hw_getPositionRaw(AS5304_s *as5304);





/**
 * 	@brief Forces the driver to update position and direction
 *	@paramas5304	pointer to valid AS304_s struct
 */
void 				AS5304_hw_update(AS5304_s *as5304);





/**
 * Returns the current direction measured by AS5304
 *
 * as5304	pointer to valid AS304_s struct
 *
 * return	Direction
 */
AS5304_Direction AS5304_hw_getDirection(AS5304_s *as5304);



#endif /* 0_SRC_2_CDRV_AS5304_AS5304_H_ */
