/'******************************************************************************
* @file             baseSensor.uml
* @author           Marco Israel
* @version          v. 1.0
* @date             06-2019
* @ingroup          uml
* @brief            UML digram for the mi_ooc sensor base class
* @copyright        Copyright (c) 2018 Marco Israel. All rights reserved.
*
*
*
*
*              		IMPORTANT NOTICE - COPYRIGHT INFORMATION
*

*
*
* THIS SOFTWARE IS PROVIDED BY MARCO ISRAEL "AS IS". ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
* EVENT SHALL <copyright holder> BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES(INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING
* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistribution of source code must retain the this copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistribution in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the <organization> nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
*
*
* Alle Inhalte in source und binaer Form, insbesondere dises Template mit seinen
* object orientierten Konzepte der Programmiersprache C, der Coding-Conversation
* und Namensgebung beispielweise fuer Variablen, Funktionen, Parameter,
* Datentypen, usw., sind urheberrechtlich geschuetzt, Alle Rechte, einschließlich
* der Verwendung, Veroeffentlichung, Bearbeitung, Uebersetzung oder
* Verfielfaeltigung, bleiben Marco Israel vorbehalten. Dieses gilt auch fuer
* alle Instanzen, Kopien oder sonstigen Verwendungen in source oder binearform.
* In jedem Fall sind diese Copyright informationen zu uebernehmen und duerfen
* nicht ohne zustimmung vereandert werden.
*
* Die Lemfoerder Electronics GmbH, Bussche-Münch-Straße 12, 32339 Espelkamp,
* ist berechtigt dieses Template innnerhalb und ausschliesslich fuer das
* Project 'ED0096_Swipetronic' zu nutzen. Marco Israel 2019 - 2020.
*
*
*
*
********************************************************************************
* @detail
* ____TODO______
*
*
********************************************************************************
* @attention
* ____TODO______
*
*
******************************************************************************'/



@startuml


/'******************************************************************************
**      Included information and global Settings
 *****************************************************************************'/


/'----- PART: Included files -------------------------------------------------'/

''!include ..\TODO.txt
!include baseObjects.uml

'
/'-------- END PART: Included files ------------------------------------------'/





/'----- PART: Settings -------------------------------------------------------'/

'title mi_ooc base Sensor Objects
'header mi_ooc base Sensor Objects
'header by Marco Israel (MI / MIS)
''footer template

'' scale 1/2


skinparam class {
''	'BackgroundColor<<H>> Wheat
''    'BorderColor<<H>> Tomato
''	'ArrowColor<<H>> SeaGreen
''    'BackgroundColor #D7FFAF
''    BackgroundColor<<HARDWARE>> #D7AF00
''    BackgroundColor<<HW SW Interface>> #AFD7D7
''    BackgroundColor<<Template>> #AFD7D7
BackgroundColor<<Sensor>> #TECHNOLOGY
BackgroundColor<<Sensor_BASE>> #LimeGreen

''    BackgroundColor<< (H,#FF7700) >> #FFD75F
}
'
/'-------- END PART: Settings ------------------------------------------------'/





/'----- PART: Legenden -------------------------------------------------------'/
''legend
''|= |= |
''| | |
''| | |
''| | |
''| | |
''| | |
''| | |
''endlegend
/'-------- END PART: Legenden ------------------------------------------------'/





/'----- PART: Variables ------------------------------------------------------'/
'' !$b1 = ""
'' !$v2 = ""
!$sensS ="<< (S,SpringGreen) Sensor >> "
!$sensB ="<< (S,SpringGreen) Sensor_BASE >> "
/'-------- END PART: Variables -----------------------------------------------'/





/'******************************************************************************
*      Hidden elemets
 *****************************************************************************'/

 hide UART
 hide DMA
 hide SPI
 hide PORT_PIN
 hide ADC
 hide UART_WRAPPER
 hide Interface\nUART_Wrapper
 hide UARTx_HW
 hide N0
 hide N1




/'******************************************************************************
**      Inheritance logic
 *****************************************************************************'/





/'******************************************************************************
*      Interfaces
 *****************************************************************************'/
 folder mi_OOC_BASES {

 !$sspW="Template\nSSP_WRAPPER"
 class $sspW <<(W,#d70087) HW Wrapper>> {
    <b>TODO:</b>
    The concret Wrapper should hold the Sensor specific stuff like command
    hex values, addresses, ... defined as a preprocessor constant.
    ____
    <b>TODO:</b>
    Copy the template and and implement command, registers and other stuff
    specific to the sensor.

 }

/'******************************************************************************
*      Objects
 *****************************************************************************'/

/'----- PART: SSP ------------------------------------------------------------'/


$aB <|.. SSP  : < <<Implements>>
class SSP $sensB{
 ----
 +  _send(base_S*, value, command_E)   : {abstract}
 +  _receive(base_S*, destination[ ]*, size, command_E) :  uint32_t{abstract}
 ____
 <b>TODO:</b>
}


}

/'-------- END PART: SSP -----------------------------------------------------'/






/'----- PART: PIC UART -------------------------------------------------------'/


/'-------- END PART: PIC UART ------------------------------------------------'/



/'******************************************************************************
*      Ahhhhhse objects
 *****************************************************************************'/




/'******************************************************************************
*      DMA base objects
 *****************************************************************************'/




/'******************************************************************************
*      UART base objects
 *****************************************************************************'/







/'******************************************************************************
**      NOTES
 *****************************************************************************'/

/'
 note "SOME NOTE"  as N1


 mi_ooc_base .. N1
 N1 .. mi_ooc_sub


 note right of dummey
     some
     long
     note
end note


'/

@enduml
