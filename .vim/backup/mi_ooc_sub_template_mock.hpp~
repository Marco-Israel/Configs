
/*******************************************************************************
* @file             mi_ooc_mi_ooc_s1_mock.pp
* @author           Marco Israel
* @version          v. 1.1
* @date             2019-05
* @ingroup          utest
* @brief            mock implementation for _mi_ooc_mi_ooc_s1
* @copyright        Copyright (c) 2018 Marco Israel. All rights reserved.
*
*
*
*
*                   IMPORTANT NOTICE
*
*
* THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
* OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
* MARCO ISRAEL SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL,
* INCIDENTAL, OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
*
* Alle Inhalte, insbesondere dises Template mit seinen object orientierten
* Konzepte der Programmiersprache C, der Coding-Conversation und Namensgebung
* beispielweise fuer Variablen, Funktionen, Parameter, Datentypen, usw., sind
* urheberrechtlich geschuetzt, Alle Rechte, einschließlich der Verwendung,
* Veroeffentlichung, Bearbeitung, Uebersetzung oder Verfielfaeltigung, bleiben
* Marco Israel vorbehalten. Dieses gilt auch fuer alle Instanzen, Kopien oder
* sonstigen Verwendungen.
*
* Die Lemfoerder Electronics GmbH, Bussche-Münch-Straße 12, 32339 Espelkamp,
* ist berechtigt dieses Template innnerhalb und ausschliesslich fuer das
* Project 'ED0096_Swipetronic' zu nutzen. Marco Israel 2019 - 2020.
*
*
*
*
********************************************************************************
* @detail
*
*
********************************************************************************
* @attention
*
*
*******************************************************************************/








/*******************************************************************************
 *******************************************************************************
 **                     DEFINITIONS
 *******************************************************************************
 ******************************************************************************/



/*******************************************************************************
 **     INCLUDED global defined information
 ******************************************************************************/

#include "CppUTestExt/MockSupport.h"


extern "C"
{
#include "mi_ooc_sub_template.h"
}





/*******************************************************************************
 **     MACRO definition
 ******************************************************************************/

#define __MOCK_VALUE__      (0xBEu)




/*******************************************************************************
 **     Type GENERAL definition
 ******************************************************************************/




/*******************************************************************************
 **     Type FUNCTION POINTER definition
 ******************************************************************************/




/*******************************************************************************
 **     Type UNION definition
 ******************************************************************************/




/*******************************************************************************
 **     Type ENUM definition
 ******************************************************************************/




/*******************************************************************************
 **     Type STRUCTURE definition
 ******************************************************************************/






/*******************************************************************************
 **     Function PRIVATE PROTOTYPE definition (static)
 ******************************************************************************/






/*******************************************************************************
 *******************************************************************************
 **                     IMPLEMENTATIONS
 *******************************************************************************
 ******************************************************************************/



/*******************************************************************************
 **     Variables global EXTERN (public) implementation
 ******************************************************************************/





/*******************************************************************************
 **     Variables global STATIC (private) implementation
 ******************************************************************************/





/*******************************************************************************
 **     Function PRIVATE INLINE implementation (STATIC inline)
 ******************************************************************************/





/*******************************************************************************
 **     Function GLOBAL implementation (extern)
 ******************************************************************************/




/* ----- PART: MOCK Ctor -----------------------------------------------------*/


EXTERN void _ctor_MOCK(mi_ooc_b1__this__st *const ps__base,
    mi_ooc_b1__ctorParamList__st *const  ps__baseParamList);



EXTERN void expactOneCall__ctor(mi_ooc_b1__this__st *const ps__base,
    mi_ooc_b1__ctorParamList__st *const  ps__baseParamList);



EXTERN void expactNCall__ctor(mi_ooc_b1__this__st *const ps__base,
    mi_ooc_b1__ctorParamList__st *const  ps__baseParamList,
    uint8_t numberOfCalls);



/* -------- END PART: MOCK Ctor ----------------------------------------------*/





/* ----- PART: MOCK Dtor -----------------------------------------------------*/


EXTERN void _dtor_MOCK(mi_ooc_b1__this__st *const ps__base);



EXTERN void expactOneCall__dtor(mi_ooc_b1__this__st *const ps__base);


EXTERN void expactNCall__dtor(mi_ooc_b1__this__st *const ps__base,
    uint8_t numberOfCalls);


/* -------- END PART: MOCK Dtor ----------------------------------------------*/








/*******************************************************************************
 **     Function PROTECTED implementation (extern)
 ******************************************************************************/





/*******************************************************************************
 **     Function PUBLIC implementation (extern)
 ******************************************************************************/







/* ----- PART: STATIC (Local) Functions --------------------------------------*/

/* -------- END PART: STATIC (Local) Functions -------------------------------*/



/* ----- PART: EXTERN (Global) Functions -------------------------------------*/

/* -------- END PART: EXTERN (Global) Functions ------------------------------*/


/**************** (C) COPYRIGHT Marco Israel ****** END OF FILE ***************/

