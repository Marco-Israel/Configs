" ~/.vim/sessions/uml.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 16 Juli 2019 at 13:43:01.
" Open this file in Vim and run :source % to restore your session.

if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'marco_pi' | colorscheme marco_pi | endif
call setqflist([])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd /cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/lmos52042_lib/project/DOC/uml
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
$argadd /cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseSensors.uml
edit lmos52042.class.uml
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 90 + 135) / 271)
exe 'vert 2resize ' . ((&columns * 90 + 135) / 271)
exe 'vert 3resize ' . ((&columns * 89 + 135) / 271)
argglobal
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=10
setlocal fml=1
setlocal fdn=10
setlocal fen
185
silent! normal! zo
let s:l = 174 - ((40 * winheight(0) + 44) / 88)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
174
normal! 046|
wincmd w
argglobal
if bufexists("/cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseSensors.uml") | buffer /cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseSensors.uml | else | edit /cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseSensors.uml | endif
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=10
setlocal fml=1
setlocal fdn=10
setlocal fen
let s:l = 199 - ((60 * winheight(0) + 44) / 88)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
199
normal! 0
wincmd w
argglobal
if bufexists("/cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseObjects.uml") | buffer /cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseObjects.uml | else | edit /cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseObjects.uml | endif
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=10
setlocal fml=1
setlocal fdn=10
setlocal fen
let s:l = 93 - ((54 * winheight(0) + 44) / 88)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
93
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 90 + 135) / 271)
exe 'vert 2resize ' . ((&columns * 90 + 135) / 271)
exe 'vert 3resize ' . ((&columns * 89 + 135) / 271)
tabnext 1
badd +153 lmos5042.uml
badd +195 /cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseSensors.uml
badd +169 lmos52042.class.uml
badd +168 /cygdrive/d/01_Projekte/02_Swipetronic/MIS_BUILD/TOOLS/thirdparty/mi_ooc/DOC/uml/baseObjects.uml
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
set winminheight=1 winminwidth=1
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
